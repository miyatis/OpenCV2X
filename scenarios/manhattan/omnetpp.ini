[General]

seed-set = 0

cmdenv-express-mode = true
cmdenv-autoflush = true

# network = artery.lte.Mode4World

# 追加
network = artery.envmod.World

**.identityRegistryModule = "idRegistry"
*.traci.mapper.vehicleType = "artery.envmod.Car"
# *.environmentModel.drawObstacles = true
# *.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"

debug-on-errors = true

print-undisposed = true

repeat = 1


**.statistic-recording = true
**.scalar-recording = true
**.vector-recording = true

# output-vector-file = "results/${configname}/${runid}.vec"
# output-scalar-file = "results/${configname}/${runid}.sca"
# eventlog-file = "results/${configname}/${runid}.elog"

output-vector-file = "results/${configname}/test20241111.vec"
output-scalar-file = "results/${configname}/test20241111.sca"
eventlog-file = "results/${configname}/test20241111.elog"

# output-vector-file = "results/${configname}/Dcc3gpp.vec"
# output-scalar-file = "results/${configname}/Dcc3gpp.sca"
# eventlog-file = "results/${configname}/Dcc3gpp.elog"

# output-vector-file = "results/${configname}/3gpp_cam.vec"
# output-scalar-file = "results/${configname}/3gpp_cam.sca"
# eventlog-file = "results/${configname}/3gpp_cam.elog"

**.coreDebug = true
**.routingRecorder.enabled = false
*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m
*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.core.startTime = 1s
num-rngs = 4
*.traci.mapper.rng-0 = 1
**.deployer.positionUpdateInterval = 0.001s

**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 6000e+6Hz
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 0
**.deployer.ruRange = 50
**.deployer.ruTxPower = "50,50,50;"
**.deployer.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.deployer.numRbDl = 51
**.deployer.numRbUl = 48
**.numBands = 48
**.fbDelay = 1

**.macDelayDl.statistic-recording = false
**.macThroughputDl.statistic-recording = false
**.macDelayUl.statistic-recording = false
**.macThroughputUl.statistic-recording = false
**.macDelayD2D.statistic-recording = false
**.macThroughputD2D.statistic-recording = false
**.macCellThroughputUl.statistic-recording = false
**.macCellThroughputDl.statistic-recording = false
**.macCellThroughputD2D.statistic-recording = false
**.macCellPacketLossDl.statistic-recording = falsse
**.macCellPacketLossUl.statistic-recording = false
**.macCellPacketLossD2D.statistic-recording = false
**.macPacketLossUl.statistic-recording = false
**.macPacketLossDl.statistic-recording = false
**.macPacketLossD2D.statistic-recording = false
**.macBufferOverFlowDl.statistic-recording = false
**.macBufferOverFlowUl.statistic-recording = false
**.macBufferOverFlowD2D.statistic-recording = false
**.harqErrorRateUl.statistic-recording = false
**.harqErrorRateDl.statistic-recording = false
**.harqErrorRateD2D.statistic-recording = false
**.harqErrorRate_1st_Ul.statistic-recording = false
**.harqErrorRate_1st_Dl.statistic-recording = false
**.harqErrorRate_1st_D2D.statistic-recording = false
**.harqErrorRate_2nd_Ul.statistic-recording = false
**.harqErrorRate_2nd_D2D.statistic-recording = false
**.harqErrorRate_3rd_Ul.statistic-recording = false
**.harqErrorRate_3rd_Dl.statistic-recording = false
**.harqErrorRate_3rd_D2D.statistic-recording = false
**.harqErrorRate_4th_Ul.statistic-recording = false
**.harqErrorRate_4th_Dl.statistic-recording = false
**.harqErrorRate_4th_D2D.statistic-recording = false
**.receivedPacketFromUpperLayer.statistic-recording = false
**.receivedPacketFromLowerLayer.statistic-recording = false
**.sentPacketToUpperLayer.statistic-recording = false
**.sentPacketToLowerLayer.statistic-recording = false
**.measuredItbs.statistic-recording = false
**.pdcpdrop0.statistic-recording = false
**.pdcpdrop1.statistic-recording = false
**.pdcpdrop2.statistic-recording = false
**.pdcpdrop3.statistic-recording = false
**.averageCqiD2D.statistic-recording = false
**.averageCqiDl.statistic-recording = false
**.averageCqiUl.statistic-recording = false

[Config Base] 
sim-time-limit = 25s
*.traci.launcher.sumocfg = "myroad/threeLane.sumocfg.xml"
*.traci.launcher.sumo = "sumo-gui"
**.lteNic.phy.channelModel = xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

*.node[*].d2dCapable = true
*.node[*].mode4D2D = true
**.amcMode = "D2D"
*.node[*].nicType = "LteNicVUeMode4"
*.node[*].lteNic.d2dCapable = true
*.node[*].lteNic.pdcpRrc.ipBased = false
*.node[*].lteNic.rlc.ipBased = false

*.node[*].lteNic.mac.subchannelSize = 25 # 16
*.node[*].lteNic.mac.numSubchannels = 2 # 3
*.node[*].lteNic.mac.probResourceKeep = 0.4

*.node[*].lteNic.mac.useCBR = false # false
*.node[*].lteNic.mac.crLimit = false

*.node[*].lteNic.mac.rriLookup = false
*.node[*].lteNic.mac.dccMechanism = false
*.node[*].lteNic.mac.packetDropping = false # false

*.node[*].lteNic.mac.reselectAfter = 1
*.node[*].lteNic.mac.adjacencyPSCCHPSSCH = true

# *.node[*].lteNic.rlc.um.packetSize = 752
*.node[*].lteNic.rlc.um.scenario3gpp = false

*.node[*].lteNic.phy.subchannelSize = 25 # 16
*.node[*].lteNic.phy.numSubchannels = 2 # 3
*.node[*].lteNic.phy.selectionWindowStartingSubframe = 1
*.node[*].lteNic.phy.adjacencyPSCCHPSSCH = true

*.node[*].lteNic.phy.pStep = 100
*.node[*].lteNic.phy.thresholdRSSI = 11 # 10
*.node[*].ueTxPower = 23
*.node[*].lteNic.phy.d2dTxPower = 23

**.usePreconfiguredTxParams = true
*.node[*].application.typename = "artery.lte.Mode4Application"
*.node[*].application.middleware.updateInterval = 0.1s
*.node[*].application.middleware.datetime = "2013-06-01 12:35:00"
*.node[*].application.middleware.services = xmldoc("services.xml") # nodeの50%にCAMとCPMを設定
# *.node[*].application.middleware.services = xmldoc("services2.xml") # 他の50%にはダミーファイルを設定し、パケットの送受信を行わない
**.lteNic.mac.txConfig = xmldoc("sidelink_configuration.xml") # CBRに応じてcrLimitを設定するファイル
*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2018-01-17 13:44:00"
*.node[*].middleware.services = xmldoc("services.xml") # nodeの50%にCAMとCPMを設定
# *.node[*].middleware.services = xmldoc("services2.xml") # 他の50%にはダミーファイルを設定し、パケットの送受信を行わない

# 輻輳制御を使用しない場合、以下の3つのコメントアウト解除
*.node[*].middleware.CaService.withDccRestriction = false
*.node[*].middleware.CP.withDccRestriction = false
*.node[*].vanetza.dcc.TransmitRateControl = "NoTransmitRateControl" # DCCの輻輳制御を行わない

# 輻輳制御を使用する場合、以下の4つのコメントアウトを解除
# *.node[*].middleware.CaService.withDccRestriction = true # camがDCCによる輻輳制御の制約を受ける
# *.node[*].middleware.CP.withDccRestriction = true
# *.node[*].vanetza.dcc.TransmitRateControl = "StateMachine" # DCCの輻輳制御をStateMachineで実行
# *.node[*].vanetza.dcc.StateMachine = "Gradual 1ms" # Reactiveな手法で使用するステートマシン

*.node[*].middleware.CaService.fixedRate = false # camを固定レートで送信

*.node[*].middleware.CaService.minInterval = 0.1s # camの生成間隔の最小値
*.node[*].middleware.CaService.maxInterval = 1.0s # camの生成間隔の最大値

*.node[*].middleware.CP.dccProfile = 3 # cpmの優先度をDP3にする 効いてない なぜ
#*.node[*].middleware.CP.cpmContainedCnt = 3 # 一つのCPMに含めることが可能な最大物体数 最大で15個

# CPMに含める物体の決定方法 ※どれか一つだけtrueにして実行, 全てfalseにするとETSIのルールで生成
#*.node[*].middleware.CP.proprsedFlag2 = true # 真の提案手法
#*.node[*].middleware.CP.proprsedFlag = false # 提案手法
# *.node[*].middleware.CP.k = 3 # 提案手法で使用：ある物体のcpm送信台数の最大値
#*.node[*].middleware.CP.randomFlag = false # ランダム
#*.node[*].middleware.CP.onlyCollisionTimeFlag = false # 最小の衝突予測時間のみ
#*.node[*].middleware.CP.allFlag = false # 最大値を無視して、全て含める
#*.node[*].middleware.CP.etsiLimitedFlag = false # ETSIの手法を使用し、含める物体数を一定以下に抑える

# *.node[*].middleware.CP.cpmInterval = 0.1s # cpmの送信インターバル 効いてない なぜ
# *.node[*].middleware.CP.intervalC0 = 0.2s
# *.node[*].middleware.CP.intervalC1 = 0.8s
# *.node[*].middleware.CP.intervalFlag = false
# *.node[*].middleware.CP.allowedSentNum = 5
# .node[*].middleware.CP.changeInterval = 1.0s

# 追加
*.node[*].environmentModel.sensors = xmldoc("sensors.xml") # xmlファイルによりセンサーを設置

# シミュレーション結果のログを取る範囲
*.node[*].middleware.CP.lowerPosX = 750
*.node[*].middleware.CP.upperPosX = 1250
*.node[*].middleware.CP.lowerPosY = 750
*.node[*].middleware.CP.upperPosY = 1250
*.node[*].lteNic.phy.lowerPosX = 750
*.node[*].lteNic.phy.upperPosX = 1250
*.node[*].lteNic.phy.lowerPosY = 750
*.node[*].lteNic.phy.upperPosY = 1250

# センサーのパラメータを設定
*.node[*].environmentModel.CircularRadar.fovRange = 150m
*.node[*].environmentModel.CircularRadar.fovAngle = 359.9
*.node[*].environmentModel.CircularRadar.numSegments = 10
